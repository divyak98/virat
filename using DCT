clc;
close all;
clear all;
 
I = imread('iovp_image.jpg');
I = rgb2gray(I); 
figure(1);
 
subplot(1, 3, 1);
imshow(I);
title('Original Image');
 
I = double(I);
C = dct2(I);
 
subplot(1, 3, 2);
imshow(C, []);
colormap gray; % Specify the colormap
title('DCT of Original Image');
 
O = idct2(C);
O = uint8(O);
 
subplot(1, 3, 3);
imshow(O);
title('IDCT of DCT Image');




















In this compression technique, an image is divided small non-overlapping blocks of equal size (e.g. 8×8), and processes the blocks independently using a 2-D transform. Here, a reversible, linear transform is used to map each block or subimage into a set of transform coefficients, which are then quantized and coded. 
 
If ‗I‘ is a subimage and ‗M‘ is the selected transform matrix, then the output of the transform 
‗C‘ can be obtained as:  
 
C= M I MT 
 
And its inverse transform output subimage ‗D‘ can be obtained as: 
 
D= I’ = MT C M 
 
 
The Discrete Cosine Transform (DCT) 
 
The discrete cosine transform (DCT) helps separate the image into parts (or spectral subbands) of differing importance (with respect to the image's visual quality). The DCT is similar to the discrete Fourier transform: it transforms a signal or image from the spatial domain to the frequency domain.  
 
The N×N cosine transform matrix C = {c(k, n)}, also called as the Discrete Cosine Transform (DCT), is defined as: 
	c(k, n)  =    	k = 0, 0 ≤ n ≤ N−1 
	=    	1 ≤ k ≤ N−1, 0 ≤ n ≤ N−1 
 
The basic operation of the DCT is as follows:  
Let, The input image is of size N×M; f(i,j) is the intensity of the pixel in row i and column j;  F(u,v) is the DCT coefficient in row k1 and column k2 of the DCT matrix. For most images, much of the signal energy lies at low frequencies; these appear in the upper left corner of the DCT. Compression is achieved since the lower right values represent higher frequencies, and are often small - small enough to be neglected with little visible distortion. The DCT input is an 8 by 8 array of integers. This array contains each pixel's gray scale level; 8 bit pixels have levels from 0 to 255.  
The output array of DCT coefficients contains integers; these can range from -1024 to 1023.  
 
It is computationally easier to implement and more efficient to regard the DCT as a set of basis functions which given a known input array size (8 x 8) can be precomputed and stored. 
The values as simply calculated from the DCT formula.  
Some Properties of DCT: 
1.The cosine transform is real and orthogonal, i.e. C = C* and C-1 = CT. 
2.The cosine transform is not the real part of the unitary DFT. 
3.The cosine transform is a fast transform. 
4.The cosine transform has excellent energy compaction for highly correlated data. 
 
Procedure: 
1.Open an image and display. 
2.Use ‗dct2‘ fuction on the image, which performs DCT on a 8×8 subimage as: 
W = T*X*T’ 
where T = 8×8 DCT matrix. Display DCT transformation. 
3. Use ‗idct2‘ fuction on the image, which performs IDCT on a 8×8 DCT subimage as: 
I = T’*W*T 
where T = 8×8 DCT matrix. Display IDCT transformation. 
5.Calculate the error between input and output images and display. 
